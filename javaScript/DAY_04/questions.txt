how many types of loops in js ?
why we need loops in programming lang ?
diff bet while and do-while ?
diff bet for and while ?


Answers -->>

Q1. how many types of loops in js ?
->    String
->    Number
->    BigInt
->    Boolean
->    Undefined
->    Null
->    Symbol
->    Object

Q2. why we need loops in programming lang ?
    -> Repetition and Efficiency:
        Loops allow you to execute a block of code repeatedly without writing the same instructions over and over.
        They reduce hours of work to seconds, making your code more efficient.
    -> Automation:
        Many tasks involve repetitive actions (e.g., processing data, printing patterns, iterating through lists).
        Loops automate these tasks, saving time and effort.
    -> Dynamic Iteration:
        Loops adapt to changing conditions during runtime. For example, 
        iterating through an array of unknown length or processing data until a specific condition is met.
    -> Readable Code:
        Using loops makes your code easier to read and understand.
        You know whatâ€™s happening and where, improving code maintainability.
    -> Common Use Cases:
        Summing elements in an array.
        Searching for specific values in a list.
        Printing patterns (e.g., stars, numbers).
        Iterating through data structures (e.g., arrays, objects).

Q3. diff bet while and do-while ?
    -> Execution Order:
        while: Condition checked first, then execution.
        do-while: Execution first, then condition checked.
    -> Minimum Execution:
        while: May not execute if the condition is false initially.
        do-while: Always executes at least once.

Q4. diff bet for and while ?
    -> Initialization:
        for: Declared within the loop structure and executed once at the beginning.
        while: Declared outside the loop; should be done explicitly before the loop.
    -> Condition Check:
        for: Checked before each iteration.
        while: Also checked before each iteration.
    -> Update:
        for: Executed after each iteration.
        while: Executed inside the loop; needs to be handled explicitly.
    -> Use Cases:
        for: Suitable for a known number of iterations or when looping over ranges.
        while: Useful when the number of iterations is not known in advance or based on a condition.

